compile:
g++ future_net.cpp -o future_net

usage:
future_net [topo file] [demand file] [result file]

algorithm:
1. DFS
2. Sort V'(or not) and cost when make adjacency list
3. Set a initial value for total cost in the beginning
4. Update cost sum for each step. If costSum > totalCost, backword and pop stack.
5. Balance searching-time for each out-edge of start vex.
